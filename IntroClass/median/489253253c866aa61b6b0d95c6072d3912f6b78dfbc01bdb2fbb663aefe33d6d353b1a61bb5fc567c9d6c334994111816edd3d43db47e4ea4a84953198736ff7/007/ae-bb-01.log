b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 1\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 6\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 1501673444968342442\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median_19526580440151959114145512832/test_19526580440151959114145512832"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmp2ff3f3.c /home/tedks/tmp/tmpae9ac0.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.c: parsing\ncilRep: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.c: parsed (0.0250664 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 16\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tp2: true (1)\n\tp3: true (1)\n\tp4: true (1)\n\tp5: true (1)\n\tp6: true (1)\n\tn1: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 0.491575)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median_19526580440151959114145512832/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\ncoverage positive:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\n\ttest: 5\n\ttest: 6\ncilRep: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.cache: saved\ncachingRep: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 16\ncilRep: stmts in weighted_path = 9\ncilRep: total weight = 1.8\ncilRep: stmts in weighted_path with weight >= 1.0 = 1\ncilRep: /home/tedks/tmp/489253253c866aa61b6b0d95c6072d3912f6b78dfbc01bdb2fbb663aefe33d6d353b1a61bb5fc567c9d6c334994111816edd3d43db47e4ea4a84953198736ff7_b392eab4dc09b4f7d01312e61d3ee88d3249fe77_median-merged.c (code bank/base file; atoms [1,16])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430857353.059131)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 0\ncilRep: fix-space quotient by string: 16 -> 16\nprogeq: computing alias analysis information\nsearch: fix space reduced (time_taken = 0.06673)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 9 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 61 appends\nsearch: ww_adaptive: 70 possible edits\nsearch: ready to start (time_taken = 0.103498)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 50 best (time_taken = 0.00494289)\nsearch: ww_adaptive: found best (time_taken = 0.000822067)\n\tvariant     1/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 41)\n\t\tn1 false (test_time = 0.233472)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000314951)\n\tvariant     2/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 50)\n\t\tn1 false (test_time = 0.0785458)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00027585)\n\tvariant     3/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 49)\n\t\tn1 false (test_time = 0.064533)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000263929)\n\tvariant     4/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 48)\n\t\tn1 false (test_time = 0.070179)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000261068)\n\tvariant     5/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 47)\n\t\tn1 false (test_time = 0.0723159)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000285149)\n\tvariant     6/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 46)\n\t\tn1 false (test_time = 0.066936)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000208139)\n\tvariant     7/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 45)\n\t\tn1 false (test_time = 0.0661428)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000180006)\n\tvariant     8/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 44)\n\t\tn1 false (test_time = 0.077899)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000161171)\n\tvariant     9/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 43)\n\t\tn1 false (test_time = 0.0664749)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000139952)\n\tvariant    10/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 42)\n\t\tn1 false (test_time = 0.0736959)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000589848)\n\tvariant    11/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 40)\n\t\tn1 false (test_time = 0.0650661)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000631809)\n\tvariant    12/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 39)\n\t\tn1 false (test_time = 0.072365)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000877857)\n\tvariant    13/   70 = ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5))  (7 tests, cond 38)\n\t\tn1 true (test_time = 0.0753181)\n\t\tp1 true (test_time = 0.066458)\n\t\tp2 true (test_time = 0.072325)\n\t\tp3 true (test_time = 0.0806549)\n\t\tp4 true (test_time = 0.070776)\n\t\tp5 true (test_time = 0.0777049)\n\t\tp6 true (test_time = 0.0779731)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(12,2)\nRepair Name: ?(1,d(6)) ?(2,d(7)) ?(3,d(11)) ?(4,d(12)) ?(5,d(13)) ?(6,d(14)) ?(7,d(15)) ?(8,d(16)) ?(9,a(15,16)) ?(10,a(15,15)) ?(11,a(15,14)) ?(12,a(15,13)) ?(13,a(15,12)) ?(14,a(15,11)) ?(15,a(15,10)) ?(16,a(15,6)) ?(17,a(15,5)) ?(18,a(14,15)) ?(19,a(14,14)) ?(20,a(14,12)) ?(21,a(14,11)) ?(22,a(14,10)) ?(23,a(13,15)) ?(24,a(13,14)) ?(25,a(13,13)) ?(26,a(13,10)) ?(27,a(13,6)) ?(28,a(13,4)) ?(29,a(13,3)) ?(30,a(13,2)) ?(31,a(13,1)) ?(32,a(12,14)) ?(33,a(12,13)) ?(34,a(12,10)) ?(35,a(12,6)) ?(36,a(12,4)) ?(37,a(12,3)) ?(38,a(12,2)) ?(39,a(12,1)) ?(40,a(11,15)) ?(41,d(5)) ?(42,a(5,16)) ?(43,a(5,15)) ?(44,a(5,14)) ?(45,a(5,13)) ?(46,a(5,12)) ?(47,a(5,11)) ?(48,a(5,10)) ?(49,a(5,6)) ?(50,a(5,5)) \nTest Condition: 38\nTest Cases Skipped: ""\nCurrent Time: 1430857354.778476\nRep: saving test cache\n\nVariant Test Case Queries: 19\n"Test Suite Evaluations": 2.71429\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 2.97931\n  Activity Name                     Count Seconds = Percent of Total Time\n  progeq partition                     16   0.002 = 0.0769662%\n  find_k_best_edits                     1   0.005 = 0.184425%\n  find_best_edit                       13   0.005 = 0.185048%\n  sanity_check                          1   0.006 = 0.224889%\n  append_sources                        9   0.103 = 3.85248%\n  compile                               3   0.329 = 12.2959%\n  test                                 33   2.228 = 83.1803%\n  TOTAL                                     2.678 = 89.6327% (avg CPU usage)\n'