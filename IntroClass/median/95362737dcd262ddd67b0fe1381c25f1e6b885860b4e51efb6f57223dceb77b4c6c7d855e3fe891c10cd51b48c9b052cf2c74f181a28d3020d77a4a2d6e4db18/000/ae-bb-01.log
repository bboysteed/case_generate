b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 1\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 6\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 1501673444968342442\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_0_738bd538e84d68c460dd150f2752d0fe62d7a53d_median_19526573203259959284809348480/test_19526573203259959284809348480"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmp3dce8c.c /home/tedks/tmp/tmpc362e6.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.c: parsing\ncilRep: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.c: parsed (0.0253496 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 26\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tp2: true (1)\n\tp3: true (1)\n\tp4: true (1)\n\tp5: true (1)\n\tp6: true (1)\n\tn1: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 0.599232)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_0_738bd538e84d68c460dd150f2752d0fe62d7a53d_median_19526573203259959284809348480/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\ncoverage positive:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\n\ttest: 5\n\ttest: 6\ncilRep: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.cache: saved\ncachingRep: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 26\ncilRep: stmts in weighted_path = 12\ncilRep: total weight = 3\ncilRep: stmts in weighted_path with weight >= 1.0 = 2\ncilRep: /home/tedks/tmp/95362737dcd262ddd67b0fe1381c25f1e6b885860b4e51efb6f57223dceb77b4c6c7d855e3fe891c10cd51b48c9b052cf2c74f181a28d3020d77a4a2d6e4db18_738bd538e84d68c460dd150f2752d0fe62d7a53d_median-merged.c (code bank/base file; atoms [1,26])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430857330.241795)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 0\ncilRep: fix-space quotient by string: 23 -> 20\nprogeq: computing alias analysis information\nsearch: fix space reduced (time_taken = 0.117077)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 12 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 139 appends\nsearch: ww_adaptive: 151 possible edits\nsearch: ready to start (time_taken = 0.215039)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 50 best (time_taken = 0.00314498)\nsearch: ww_adaptive: found best (time_taken = 0.000432968)\n\tvariant     1/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 23)\n\t\tn1 false (test_time = 0.240806)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.0004251)\n\tvariant     2/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 50)\n\t\tn1 false (test_time = 0.108255)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000597)\n\tvariant     3/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 49)\n\t\tn1 false (test_time = 1.05378)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000519991)\n\tvariant     4/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 48)\n\t\tn1 false (test_time = 1.0625)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000452995)\n\tvariant     5/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 47)\n\t\tn1 false (test_time = 0.103796)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000444174)\n\tvariant     6/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 46)\n\t\tn1 false (test_time = 0.0832319)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000381947)\n\tvariant     7/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 45)\n\t\tn1 false (test_time = 0.0719969)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000403166)\n\tvariant     8/  151 = ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1))  (7 tests, cond 44)\n\t\tn1 true (test_time = 0.075752)\n\t\tp1 true (test_time = 0.080467)\n\t\tp2 true (test_time = 0.0776591)\n\t\tp3 true (test_time = 0.0908229)\n\t\tp4 true (test_time = 0.112168)\n\t\tp5 true (test_time = 0.07377)\n\t\tp6 true (test_time = 0.069521)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(15,12)\nRepair Name: ?(1,d(4)) ?(2,d(6)) ?(3,d(17)) ?(4,d(18)) ?(5,d(21)) ?(6,d(22)) ?(7,d(23)) ?(8,d(24)) ?(9,d(25)) ?(10,d(26)) ?(11,a(25,26)) ?(12,a(25,24)) ?(13,a(25,23)) ?(14,a(25,16)) ?(15,a(25,15)) ?(16,a(25,14)) ?(17,a(25,12)) ?(18,a(25,11)) ?(19,a(25,10)) ?(20,a(25,9)) ?(21,a(25,6)) ?(22,a(25,4)) ?(23,d(15)) ?(24,d(16)) ?(25,a(16,26)) ?(26,a(16,24)) ?(27,a(16,23)) ?(28,a(16,16)) ?(29,a(16,15)) ?(30,a(16,14)) ?(31,a(16,12)) ?(32,a(16,11)) ?(33,a(16,10)) ?(34,a(16,9)) ?(35,a(16,6)) ?(36,a(16,4)) ?(37,a(16,1)) ?(38,a(15,26)) ?(39,a(15,24)) ?(40,a(15,23)) ?(41,a(15,16)) ?(42,a(15,15)) ?(43,a(15,14)) ?(44,a(15,12)) ?(45,a(15,11)) ?(46,a(15,10)) ?(47,a(15,9)) ?(48,a(15,6)) ?(49,a(15,4)) ?(50,a(15,1)) \nTest Condition: 44\nTest Cases Skipped: ""\nCurrent Time: 1430857333.891905\nRep: saving test cache\n\nVariant Test Case Queries: 14\n"Test Suite Evaluations": 2\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 5.02268\n  Activity Name                     Count Seconds = Percent of Total Time\n  find_k_best_edits                     1   0.003 = 0.0670092%\n  find_best_edit                        8   0.004 = 0.0773969%\n  sanity_check                          1   0.004 = 0.0912828%\n  progeq partition                     20   0.026 = 0.545973%\n  append_sources                       12   0.214 = 4.57386%\n  compile                               3   0.350 = 7.46317%\n  test                                 28   4.088 = 87.1813%\n  TOTAL                                     4.689 = 93.1866% (avg CPU usage)\n'