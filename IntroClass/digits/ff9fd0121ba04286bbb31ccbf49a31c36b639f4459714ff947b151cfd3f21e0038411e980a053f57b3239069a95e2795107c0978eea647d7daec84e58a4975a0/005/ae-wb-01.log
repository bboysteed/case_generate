b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 1\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 9\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 3332782029167834594\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits_19774721501284866432726010624/test_19774721501284866432726010624"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmpdb4cbd.c /home/tedks/tmp/tmp0adf58.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.c: parsing\ncilRep: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.c: parsed (0.0639305 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 28\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tp2: true (1)\n\tp3: true (1)\n\tp4: true (1)\n\tp5: true (1)\n\tp6: true (1)\n\tp7: true (1)\n\tp8: true (1)\n\tp9: true (1)\n\tn1: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 1.15735)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits_19774721501284866432726010624/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\ncoverage positive:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\n\ttest: 5\n\ttest: 6\n\ttest: 7\n\ttest: 8\n\ttest: 9\ncilRep: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.cache: saved\ncachingRep: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 28\ncilRep: stmts in weighted_path = 11\ncilRep: total weight = 2.9\ncilRep: stmts in weighted_path with weight >= 1.0 = 2\ncilRep: /home/tedks/tmp/ff9fd0121ba04286bbb31ccbf49a31c36b639f4459714ff947b151cfd3f21e0038411e980a053f57b3239069a95e2795107c0978eea647d7daec84e58a4975a0_5e52412712a3245cb8b89dd0104f2d7962455f6a_digits-merged.c (code bank/base file; atoms [1,28])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430855317.839170)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 0\ncilRep: fix-space quotient by string: 18 -> 15\nprogeq: computing alias analysis information\nsearch: fix space reduced (time_taken = 0.238644)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 11 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 112 appends\nsearch: ww_adaptive: 123 possible edits\nsearch: ready to start (time_taken = 0.33202)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 50 best (time_taken = 0.00413895)\nsearch: ww_adaptive: found best (time_taken = 0.000699997)\n\tvariant     1/  123 = ?(1,d(11)) ?(2,d(21)) ?(3,d(22)) ?(4,d(23)) ?(5,d(24)) ?(6,d(25)) ?(7,d(26)) ?(8,d(27)) ?(9,d(28)) ?(10,a(27,28)) ?(11,a(27,27)) ?(12,a(27,26)) ?(13,a(27,25)) ?(14,a(27,24)) ?(15,a(27,23)) ?(16,a(27,22)) ?(17,a(27,21)) ?(18,a(27,19)) ?(19,a(27,18)) ?(20,a(27,12)) ?(21,a(27,11)) ?(22,a(26,27)) ?(23,a(26,26)) ?(24,a(26,25)) ?(25,d(12)) ?(26,d(20)) ?(27,a(20,28)) ?(28,a(20,27)) ?(29,a(20,26)) ?(30,a(20,25)) ?(31,a(20,24)) ?(32,a(20,23)) ?(33,a(20,22)) ?(34,a(20,21)) ?(35,a(20,19)) ?(36,a(20,18)) ?(37,a(20,12)) ?(38,a(20,11)) ?(39,a(12,28)) ?(40,a(12,27)) ?(41,a(12,26)) ?(42,a(12,25)) ?(43,a(12,24)) ?(44,a(12,23)) ?(45,a(12,22)) ?(46,a(12,21)) ?(47,a(12,19)) ?(48,a(12,18)) ?(49,a(12,12)) ?(50,a(12,11))  (10 tests, cond 25)\n\t\tn1 false (test_time = 0.399594)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000924826)\n\tvariant     2/  123 = ?(1,d(11)) ?(2,d(21)) ?(3,d(22)) ?(4,d(23)) ?(5,d(24)) ?(6,d(25)) ?(7,d(26)) ?(8,d(27)) ?(9,d(28)) ?(10,a(27,28)) ?(11,a(27,27)) ?(12,a(27,26)) ?(13,a(27,25)) ?(14,a(27,24)) ?(15,a(27,23)) ?(16,a(27,22)) ?(17,a(27,21)) ?(18,a(27,19)) ?(19,a(27,18)) ?(20,a(27,12)) ?(21,a(27,11)) ?(22,a(26,27)) ?(23,a(26,26)) ?(24,a(26,25)) ?(25,d(12)) ?(26,d(20)) ?(27,a(20,28)) ?(28,a(20,27)) ?(29,a(20,26)) ?(30,a(20,25)) ?(31,a(20,24)) ?(32,a(20,23)) ?(33,a(20,22)) ?(34,a(20,21)) ?(35,a(20,19)) ?(36,a(20,18)) ?(37,a(20,12)) ?(38,a(20,11)) ?(39,a(12,28)) ?(40,a(12,27)) ?(41,a(12,26)) ?(42,a(12,25)) ?(43,a(12,24)) ?(44,a(12,23)) ?(45,a(12,22)) ?(46,a(12,21)) ?(47,a(12,19)) ?(48,a(12,18)) ?(49,a(12,12)) ?(50,a(12,11))  (10 tests, cond 50)\n\t\tn1 false (test_time = 0.111977)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000800133)\n\tvariant     3/  123 = ?(1,d(11)) ?(2,d(21)) ?(3,d(22)) ?(4,d(23)) ?(5,d(24)) ?(6,d(25)) ?(7,d(26)) ?(8,d(27)) ?(9,d(28)) ?(10,a(27,28)) ?(11,a(27,27)) ?(12,a(27,26)) ?(13,a(27,25)) ?(14,a(27,24)) ?(15,a(27,23)) ?(16,a(27,22)) ?(17,a(27,21)) ?(18,a(27,19)) ?(19,a(27,18)) ?(20,a(27,12)) ?(21,a(27,11)) ?(22,a(26,27)) ?(23,a(26,26)) ?(24,a(26,25)) ?(25,d(12)) ?(26,d(20)) ?(27,a(20,28)) ?(28,a(20,27)) ?(29,a(20,26)) ?(30,a(20,25)) ?(31,a(20,24)) ?(32,a(20,23)) ?(33,a(20,22)) ?(34,a(20,21)) ?(35,a(20,19)) ?(36,a(20,18)) ?(37,a(20,12)) ?(38,a(20,11)) ?(39,a(12,28)) ?(40,a(12,27)) ?(41,a(12,26)) ?(42,a(12,25)) ?(43,a(12,24)) ?(44,a(12,23)) ?(45,a(12,22)) ?(46,a(12,21)) ?(47,a(12,19)) ?(48,a(12,18)) ?(49,a(12,12)) ?(50,a(12,11))  (10 tests, cond 49)\n\t\tn1 false (test_time = 0.0957799)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00178409)\n\tvariant     4/  123 = ?(1,d(11)) ?(2,d(21)) ?(3,d(22)) ?(4,d(23)) ?(5,d(24)) ?(6,d(25)) ?(7,d(26)) ?(8,d(27)) ?(9,d(28)) ?(10,a(27,28)) ?(11,a(27,27)) ?(12,a(27,26)) ?(13,a(27,25)) ?(14,a(27,24)) ?(15,a(27,23)) ?(16,a(27,22)) ?(17,a(27,21)) ?(18,a(27,19)) ?(19,a(27,18)) ?(20,a(27,12)) ?(21,a(27,11)) ?(22,a(26,27)) ?(23,a(26,26)) ?(24,a(26,25)) ?(25,d(12)) ?(26,d(20)) ?(27,a(20,28)) ?(28,a(20,27)) ?(29,a(20,26)) ?(30,a(20,25)) ?(31,a(20,24)) ?(32,a(20,23)) ?(33,a(20,22)) ?(34,a(20,21)) ?(35,a(20,19)) ?(36,a(20,18)) ?(37,a(20,12)) ?(38,a(20,11)) ?(39,a(12,28)) ?(40,a(12,27)) ?(41,a(12,26)) ?(42,a(12,25)) ?(43,a(12,24)) ?(44,a(12,23)) ?(45,a(12,22)) ?(46,a(12,21)) ?(47,a(12,19)) ?(48,a(12,18)) ?(49,a(12,12)) ?(50,a(12,11))  (10 tests, cond 48)\n\t\tn1 true (test_time = 0.107124)\n\t\tp1 true (test_time = 0.118024)\n\t\tp2 true (test_time = 0.14898)\n\t\tp3 true (test_time = 0.128521)\n\t\tp4 true (test_time = 0.142079)\n\t\tp5 true (test_time = 0.175155)\n\t\tp6 true (test_time = 0.177641)\n\t\tp7 true (test_time = 0.11634)\n\t\tp8 true (test_time = 0.162547)\n\t\tp9 true (test_time = 0.117923)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(12,18)\nRepair Name: ?(1,d(11)) ?(2,d(21)) ?(3,d(22)) ?(4,d(23)) ?(5,d(24)) ?(6,d(25)) ?(7,d(26)) ?(8,d(27)) ?(9,d(28)) ?(10,a(27,28)) ?(11,a(27,27)) ?(12,a(27,26)) ?(13,a(27,25)) ?(14,a(27,24)) ?(15,a(27,23)) ?(16,a(27,22)) ?(17,a(27,21)) ?(18,a(27,19)) ?(19,a(27,18)) ?(20,a(27,12)) ?(21,a(27,11)) ?(22,a(26,27)) ?(23,a(26,26)) ?(24,a(26,25)) ?(25,d(12)) ?(26,d(20)) ?(27,a(20,28)) ?(28,a(20,27)) ?(29,a(20,26)) ?(30,a(20,25)) ?(31,a(20,24)) ?(32,a(20,23)) ?(33,a(20,22)) ?(34,a(20,21)) ?(35,a(20,19)) ?(36,a(20,18)) ?(37,a(20,12)) ?(38,a(20,11)) ?(39,a(12,28)) ?(40,a(12,27)) ?(41,a(12,26)) ?(42,a(12,25)) ?(43,a(12,24)) ?(44,a(12,23)) ?(45,a(12,22)) ?(46,a(12,21)) ?(47,a(12,19)) ?(48,a(12,18)) ?(49,a(12,12)) ?(50,a(12,11)) \nTest Condition: 48\nTest Cases Skipped: ""\nCurrent Time: 1430855320.430067\nRep: saving test cache\n\nVariant Test Case Queries: 13\n"Test Suite Evaluations": 1.3\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 5.21197\n  Activity Name                     Count Seconds = Percent of Total Time\n  find_k_best_edits                     1   0.004 = 0.0958111%\n  find_best_edit                        4   0.004 = 0.0967843%\n  progeq partition                     15   0.005 = 0.125212%\n  sanity_check                          1   0.029 = 0.681427%\n  append_sources                       11   0.331 = 7.68637%\n  compile                               3   0.410 = 9.5151%\n  test                                 33   3.527 = 81.7993%\n  TOTAL                                     4.312 = 82.4442% (avg CPU usage)\n'