b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 1\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 9\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 3332782029167834594\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_6_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits_19774721559335010103896681280/test_19774721559335010103896681280"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmp18c11b.c /home/tedks/tmp/tmp5ef9f9.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.c: parsing\ncilRep: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.c: parsed (0.0640297 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 25\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tp2: true (1)\n\tp3: true (1)\n\tp4: true (1)\n\tp5: true (1)\n\tp6: true (1)\n\tp7: true (1)\n\tp8: true (1)\n\tp9: true (1)\n\tn1: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 0.81617)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_6_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits_19774721559335010103896681280/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\ncoverage positive:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\n\ttest: 5\n\ttest: 6\n\ttest: 7\n\ttest: 8\n\ttest: 9\ncilRep: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.cache: saved\ncachingRep: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 25\ncilRep: stmts in weighted_path = 13\ncilRep: total weight = 1.3\ncilRep: stmts in weighted_path with weight >= 1.0 = 0\ncilRep: /home/tedks/tmp/0cdfa335eea3c612e6fa3ad261276b0c3ebbc6ff0ff13c20bdc249bad29a8037ca6dc887dd28558964e1e1a24f47c4cffc05adba525285dc8b93660cdf9b8b7c_a2ebd5543596a9fb3577a18a4871bfe4f5ba8f59_digits-merged.c (code bank/base file; atoms [1,25])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430855305.393756)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 0\ncilRep: fix-space quotient by string: 22 -> 21\nprogeq: computing alias analysis information\nsearch: fix space reduced (time_taken = 0.154118)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 13 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 121 appends\nsearch: ww_adaptive: 134 possible edits\nsearch: ready to start (time_taken = 0.240284)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 50 best (time_taken = 0.00434089)\nsearch: ww_adaptive: found best (time_taken = 0.000599146)\n\tvariant     1/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 1)\n\t\tn1 false (test_time = 0.289179)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000741959)\n\tvariant     2/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 50)\n\t\tn1 false (test_time = 0.077064)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000787973)\n\tvariant     3/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 49)\n\t\tn1 true (test_time = 0.08077)\n\t\tp1 false (test_time = 0.078691)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000877142)\n\tvariant     4/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 48)\n\t\tn1 false (test_time = 0.068229)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00078702)\n\tvariant     5/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 47)\n\t\tn1 false (test_time = 0.0688062)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00089407)\n\tvariant     6/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 46)\n\t\tn1 false (test_time = 0.080384)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000654936)\n\tvariant     7/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 45)\n\t\tn1 false (test_time = 0.083498)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00074482)\n\tvariant     8/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 44)\n\t\tn1 false (test_time = 0.071744)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000607014)\n\tvariant     9/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 43)\n\t\tn1 false (test_time = 0.0725279)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000708103)\n\tvariant    10/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 42)\n\t\tn1 false (test_time = 0.076977)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000786066)\n\tvariant    11/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 41)\n\t\tn1 false (test_time = 0.0680408)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000856876)\n\tvariant    12/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 40)\n\t\tn1 false (test_time = 0.105956)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00088191)\n\tvariant    13/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 39)\n\t\tn1 false (test_time = 0.0958381)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000576973)\n\tvariant    14/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 38)\n\t\tn1 false (test_time = 0.0776162)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000536919)\n\tvariant    15/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 37)\n\t\tn1 false (test_time = 0.0907929)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000602961)\n\tvariant    16/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 36)\n\t\tn1 true (test_time = 0.0877481)\n\t\tp1 false (test_time = 0.0839438)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000555038)\n\tvariant    17/  134 = ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11))  (10 tests, cond 35)\n\t\tn1 true (test_time = 0.0848179)\n\t\tp1 true (test_time = 0.076082)\n\t\tp2 true (test_time = 0.073436)\n\t\tp3 true (test_time = 0.0724261)\n\t\tp4 true (test_time = 0.0798848)\n\t\tp5 true (test_time = 0.0911231)\n\t\tp6 true (test_time = 0.099911)\n\t\tp7 true (test_time = 0.092813)\n\t\tp8 true (test_time = 0.08162)\n\t\tp9 true (test_time = 0.0801771)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(23,12)\nRepair Name: ?(1,d(1)) ?(2,d(9)) ?(3,d(15)) ?(4,d(16)) ?(5,d(17)) ?(6,d(18)) ?(7,d(19)) ?(8,d(20)) ?(9,d(21)) ?(10,d(22)) ?(11,d(23)) ?(12,d(24)) ?(13,d(25)) ?(14,a(24,25)) ?(15,a(24,24)) ?(16,a(24,23)) ?(17,a(24,22)) ?(18,a(24,20)) ?(19,a(24,19)) ?(20,a(24,18)) ?(21,a(24,17)) ?(22,a(24,16)) ?(23,a(24,15)) ?(24,a(24,13)) ?(25,a(24,12)) ?(26,a(24,5)) ?(27,a(24,4)) ?(28,a(24,3)) ?(29,a(23,24)) ?(30,a(23,23)) ?(31,a(23,17)) ?(32,a(23,16)) ?(33,a(23,15)) ?(34,a(23,13)) ?(35,a(23,12)) ?(36,a(23,5)) ?(37,a(22,24)) ?(38,a(22,23)) ?(39,a(22,22)) ?(40,a(22,21)) ?(41,a(22,20)) ?(42,a(22,19)) ?(43,a(22,18)) ?(44,a(22,17)) ?(45,a(22,16)) ?(46,a(22,15)) ?(47,a(22,14)) ?(48,a(22,13)) ?(49,a(22,12)) ?(50,a(22,11)) \nTest Condition: 35\nTest Cases Skipped: ""\nCurrent Time: 1430855308.307664\nRep: saving test cache\n\nVariant Test Case Queries: 28\n"Test Suite Evaluations": 2.8\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 4.85763\n  Activity Name                     Count Seconds = Percent of Total Time\n  find_k_best_edits                     1   0.004 = 0.100126%\n  progeq partition                     21   0.008 = 0.191927%\n  find_best_edit                       17   0.012 = 0.280304%\n  sanity_check                          1   0.014 = 0.32267%\n  append_sources                       13   0.239 = 5.52555%\n  compile                               3   0.385 = 8.89553%\n  test                                 48   3.667 = 84.6839%\n  TOTAL                                     4.330 = 88.9729% (avg CPU usage)\n'