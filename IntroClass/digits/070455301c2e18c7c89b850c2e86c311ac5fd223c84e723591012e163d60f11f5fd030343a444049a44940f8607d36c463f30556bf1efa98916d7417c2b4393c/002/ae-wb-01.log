b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 1\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 9\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 3332782029167834594\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_2_ddac892662c0103ee13e1d5365dfc60cd5773842_digits_19774721397362499415651549376/test_19774721397362499415651549376"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmp1725cf.c /home/tedks/tmp/tmp6f4047.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.c: parsing\ncilRep: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.c: parsed (0.0638266 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 24\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tp2: true (1)\n\tp3: true (1)\n\tp4: true (1)\n\tp5: true (1)\n\tp6: true (1)\n\tp7: true (1)\n\tp8: true (1)\n\tp9: true (1)\n\tn1: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 0.977138)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_2_ddac892662c0103ee13e1d5365dfc60cd5773842_digits_19774721397362499415651549376/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\ncoverage positive:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\n\ttest: 5\n\ttest: 6\n\ttest: 7\n\ttest: 8\n\ttest: 9\ncilRep: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.cache: saved\ncachingRep: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 24\ncilRep: stmts in weighted_path = 6\ncilRep: total weight = 0.6\ncilRep: stmts in weighted_path with weight >= 1.0 = 0\ncilRep: /home/tedks/tmp/070455301c2e18c7c89b850c2e86c311ac5fd223c84e723591012e163d60f11f5fd030343a444049a44940f8607d36c463f30556bf1efa98916d7417c2b4393c_ddac892662c0103ee13e1d5365dfc60cd5773842_digits-merged.c (code bank/base file; atoms [1,24])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430855330.195604)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 0\ncilRep: fix-space quotient by string: 12 -> 12\nprogeq: computing alias analysis information\nsearch: fix space reduced (time_taken = 0.241515)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 6 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 37 appends\nsearch: ww_adaptive: 43 possible edits\nsearch: ready to start (time_taken = 0.13997)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 43 best (time_taken = 0.00605702)\nsearch: ww_adaptive: found best (time_taken = 0.00139713)\n\tvariant     1/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 1)\n\t\tn1 false (test_time = 0.356288)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000891924)\n\tvariant     2/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 43)\n\t\tn1 false (test_time = 0.077796)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000688076)\n\tvariant     3/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 42)\n\t\tn1 false (test_time = 0.088351)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000921011)\n\tvariant     4/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 41)\n\t\tn1 false (test_time = 0.130305)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000758886)\n\tvariant     5/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 40)\n\t\tn1 false (test_time = 0.0903468)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00089097)\n\tvariant     6/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 39)\n\t\tn1 false (test_time = 0.112443)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000696898)\n\tvariant     7/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 38)\n\t\tn1 false (test_time = 0.0957298)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000607014)\n\tvariant     8/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 37)\n\t\tn1 false (test_time = 0.0949731)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000936985)\n\tvariant     9/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 36)\n\t\tn1 false (test_time = 0.223345)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000663996)\n\tvariant    10/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 35)\n\t\tn1 false (test_time = 0.126647)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000504017)\n\tvariant    11/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 34)\n\t\tn1 false (test_time = 0.091289)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000684023)\n\tvariant    12/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 33)\n\t\tn1 true (test_time = 0.112817)\n\t\tp1 false (test_time = 0.130901)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00082612)\n\tvariant    13/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 32)\n\t\tn1 true (test_time = 0.118122)\n\t\tp1 false (test_time = 0.143575)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000651121)\n\tvariant    14/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 31)\n\t\tn1 false (test_time = 0.13547)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00058198)\n\tvariant    15/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 30)\n\t\tn1 false (test_time = 0.10361)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000566006)\n\tvariant    16/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 29)\n\t\tn1 false (test_time = 0.114011)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000518084)\n\tvariant    17/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 28)\n\t\tn1 false (test_time = 0.100911)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000518084)\n\tvariant    18/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 27)\n\t\tn1 false (test_time = 0.0826719)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000507116)\n\tvariant    19/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 26)\n\t\tn1 true (test_time = 0.0909619)\n\t\tp1 false (test_time = 0.079627)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000467062)\n\tvariant    20/   43 = ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1))  (10 tests, cond 25)\n\t\tn1 true (test_time = 0.0982161)\n\t\tp1 true (test_time = 0.102832)\n\t\tp2 true (test_time = 0.093801)\n\t\tp3 true (test_time = 0.127445)\n\t\tp4 true (test_time = 0.0949101)\n\t\tp5 true (test_time = 0.151383)\n\t\tp6 true (test_time = 0.106075)\n\t\tp7 true (test_time = 0.133581)\n\t\tp8 true (test_time = 0.083463)\n\t\tp9 true (test_time = 0.102937)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(21,19)\nRepair Name: ?(1,d(18)) ?(2,d(20)) ?(3,d(21)) ?(4,d(22)) ?(5,d(23)) ?(6,d(24)) ?(7,a(23,24)) ?(8,a(23,23)) ?(9,a(23,22)) ?(10,a(23,21)) ?(11,a(23,20)) ?(12,a(23,19)) ?(13,a(23,17)) ?(14,a(23,1)) ?(15,a(22,23)) ?(16,a(22,22)) ?(17,a(22,21)) ?(18,a(22,20)) ?(19,a(22,19)) ?(20,a(22,17)) ?(21,a(21,23)) ?(22,a(21,22)) ?(23,a(21,21)) ?(24,a(21,20)) ?(25,a(21,19)) ?(26,a(21,17)) ?(27,a(21,16)) ?(28,a(20,23)) ?(29,a(20,22)) ?(30,a(20,21)) ?(31,a(20,20)) ?(32,a(20,19)) ?(33,a(20,17)) ?(34,a(20,16)) ?(35,a(18,24)) ?(36,a(18,23)) ?(37,a(18,22)) ?(38,a(18,21)) ?(39,a(18,20)) ?(40,a(18,19)) ?(41,a(18,18)) ?(42,a(18,17)) ?(43,a(18,1)) \nTest Condition: 25\nTest Cases Skipped: ""\nCurrent Time: 1430855334.410919\nRep: saving test cache\n\nVariant Test Case Queries: 32\n"Test Suite Evaluations": 3.2\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 6.56571\n  Activity Name                     Count Seconds = Percent of Total Time\n  progeq partition                     12   0.005 = 0.0920651%\n  find_k_best_edits                     1   0.006 = 0.105616%\n  find_best_edit                       20   0.014 = 0.247005%\n  sanity_check                          1   0.023 = 0.39828%\n  append_sources                        6   0.139 = 2.43684%\n  compile                               3   0.466 = 8.14481%\n  test                                 52   5.066 = 88.5754%\n  TOTAL                                     5.720 = 86.9308% (avg CPU usage)\n'