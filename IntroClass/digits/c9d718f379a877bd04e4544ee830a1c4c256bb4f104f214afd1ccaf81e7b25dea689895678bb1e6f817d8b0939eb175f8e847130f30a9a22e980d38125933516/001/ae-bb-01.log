b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 5\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 1\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 1501673444968342442\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_1_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits_19526574022115096983282861824/test_19526574022115096983282861824"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmp36677b.c /home/tedks/tmp/tmp16564b.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.c: parsing\ncilRep: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.c: parsed (0.0449476 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 32\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tn1: false (0)\n\tn2: false (0)\n\tn3: false (0)\n\tn4: false (0)\n\tn5: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 0.555107)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_1_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits_19526574022115096983282861824/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\n\ttest: 5\ncoverage positive:\n\ttest: 1\ncilRep: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.cache: saved\ncachingRep: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 32\ncilRep: stmts in weighted_path = 17\ncilRep: total weight = 9.8\ncilRep: stmts in weighted_path with weight >= 1.0 = 9\ncilRep: /home/tedks/tmp/c9d718f379a877bd04e4544ee830a1c4c256bb4f104f214afd1ccaf81e7b25dea689895678bb1e6f817d8b0939eb175f8e847130f30a9a22e980d38125933516_cd730fb2188cc664f332e7c4d69a7ea77ba764e2_digits-merged.c (code bank/base file; atoms [1,32])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430857229.832360)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 4\ncilRep: fix-space quotient by string: 28 -> 19\nprogeq: computing alias analysis information\nprogeq: WARNING: cannot resolve call: __builtin_bswap32\nprogeq: WARNING: cannot resolve call: __builtin_bswap64\nsearch: fix space reduced (time_taken = 0.166212)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 17 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 205 appends\nsearch: ww_adaptive: 222 possible edits\nsearch: ready to start (time_taken = 0.258998)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 50 best (time_taken = 0.0202789)\nsearch: ww_adaptive: found best (time_taken = 0.000386953)\n\tvariant     1/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 1)\n\t\tn1 false (test_time = 0.249372)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000566006)\n\tvariant     2/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 50)\n\t\tn1 false (test_time = 0.103345)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000547171)\n\tvariant     3/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 49)\n\t\tn1 false (test_time = 0.0934551)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000784874)\n\tvariant     4/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 48)\n\t\tn1 false (test_time = 0.0946989)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000764847)\n\tvariant     5/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 47)\n\t\tn1 false (test_time = 0.0877471)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000676155)\n\tvariant     6/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 46)\n\t\tn1 false (test_time = 0.0801828)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.00070405)\n\tvariant     7/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 45)\n\t\tn1 false (test_time = 0.0857718)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000758886)\n\tvariant     8/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 44)\n\t\tn1 false (test_time = 0.0833769)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000647068)\n\tvariant     9/  222 = ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25))  (6 tests, cond 43)\n\t\tn1 true (test_time = 0.0767479)\n\t\tn2 true (test_time = 0.088675)\n\t\tn3 true (test_time = 0.094656)\n\t\tn4 true (test_time = 0.083622)\n\t\tn5 true (test_time = 0.083566)\n\t\tp1 true (test_time = 0.0911689)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(21,32)\nRepair Name: ?(1,a(10,31)) ?(2,a(10,32)) ?(3,a(21,10)) ?(4,a(21,11)) ?(5,a(21,17)) ?(6,a(21,18)) ?(7,a(21,20)) ?(8,a(21,23)) ?(9,d(5)) ?(10,d(6)) ?(11,d(7)) ?(12,d(8)) ?(13,d(9)) ?(14,d(10)) ?(15,d(21)) ?(16,d(22)) ?(17,d(23)) ?(18,a(23,32)) ?(19,a(23,31)) ?(20,a(23,30)) ?(21,a(23,29)) ?(22,a(23,28)) ?(23,a(23,27)) ?(24,a(23,26)) ?(25,a(23,25)) ?(26,a(23,23)) ?(27,a(23,20)) ?(28,a(23,18)) ?(29,a(23,17)) ?(30,a(23,11)) ?(31,a(23,10)) ?(32,a(22,31)) ?(33,a(22,30)) ?(34,a(22,29)) ?(35,a(22,28)) ?(36,a(22,27)) ?(37,a(22,26)) ?(38,a(22,25)) ?(39,a(22,23)) ?(40,a(22,20)) ?(41,a(22,18)) ?(42,a(22,10)) ?(43,a(21,32)) ?(44,a(21,31)) ?(45,a(21,30)) ?(46,a(21,29)) ?(47,a(21,28)) ?(48,a(21,27)) ?(49,a(21,26)) ?(50,a(21,25)) \nTest Condition: 43\nTest Cases Skipped: ""\nCurrent Time: 1430857231.687557\nRep: saving test cache\n\nVariant Test Case Queries: 14\n"Test Suite Evaluations": 2.33333\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 3.41739\n  Activity Name                     Count Seconds = Percent of Total Time\n  find_best_edit                        9   0.006 = 0.199061%\n  progeq partition                     19   0.007 = 0.23608%\n  sanity_check                          1   0.009 = 0.29707%\n  find_k_best_edits                     1   0.020 = 0.695962%\n  append_sources                       17   0.258 = 8.85783%\n  compile                               3   0.442 = 15.1673%\n  test                                 26   2.172 = 74.5467%\n  TOTAL                                     2.913 = 84.9344% (avg CPU usage)\n'