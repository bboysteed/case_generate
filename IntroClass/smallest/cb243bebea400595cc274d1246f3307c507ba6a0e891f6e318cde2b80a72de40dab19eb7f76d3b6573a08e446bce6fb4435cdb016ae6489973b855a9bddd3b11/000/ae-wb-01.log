b'--allow-coverage-fail false\n--appp 0.33333\n--asm-code-only false\n--best-edit-rule "1 * fault_loc_weight ; 1 * max_test_fail_prob ; -1 * num_tests"\n--best-test-rule "1 * test_fail_prob ; 1 * test_fail_count ; -1 * test_pass_count"\n--compiler "gcc"\n--compiler-command ""\n--compiler-opts "-lm"\n--continue false\n--coverage-info ""\n--coverage-per-test false\n--crossover "one"\n--crossp 0.5\n--delp 0.33333\n--describe-machine false\n--diversity-selection 0\n--edit-script false\n--elf-risc false\n--exclude-edits ""\n--exp-diff false\n--fault-file ""\n--fault-path "coverage.path.neg"\n--fault-scheme "path"\n--fitness-in-parallel 1\n--fix-file ""\n--fix-oracle ""\n--fix-path "coverage.path.pos"\n--fix-scheme "default"\n--flatten-path ""\n--format "txt"\n--gen-per-exchange 1\n--generations 10\n--gui false\n--hostname "127.0.0.1"\n--ignore-dead-code true\n--ignore-equiv-appends true\n--ignore-standard-headers true\n--ignore-string-equiv-fixes true\n--ignore-untyped-returns true\n--incoming-pop ""\n--keep-source true\n--label-repair false\n--max-evals 0\n--minimization false\n--mt-cov false\n--multiopt-minimize false\n--multiopt-no-inf false\n--neg-tests 4\n--neg-weight 1\n--negative-test-weight 2\n--neutral-walk-max-size 0\n--neutral-walk-weight ""\n--nht-id "global"\n--nht-port 51000\n--nht-server ""\n--no-rep-cache true\n--no-test-cache false\n--num-comps 2\n--num-objectives 2\n--oracle-genome ""\n--popsize 40\n--port 60000\n--pos-tests 4\n--pos-weight 0.1\n--prefix "./"\n--preprocessor ""\n--print-incremental-evals false\n--print-source-name false\n--program "/home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.c"\n--promut 1\n--quiet false\n--regen-paths false\n--rep ""\n--rep-cache ""\n--repp 0\n--samp-strat "variant"\n--sample 1\n--sample-runs 100\n--sanity "yes"\n--search "ww"\n--seed 3332782029167834594\n--semantic-check "scope"\n--single-fitness false\n--skip-failed-sanity-tests false\n--skip-tests ""\n--split-search 0\n--sport 65000\n--subatom-constp 0.5\n--subatom-mutp 0\n--super-mutant true\n--super-mutant-size 50\n--swap-bug false\n--swapp 0.33333\n--template-cache ""\n--templates ""\n--test-command ""\n--test-script "/home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_0_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest_19774720444613872346338335552/test_19774720444613872346338335552"\n--tournament-size 2\n--tweet false\n--uniq false\n--valgrind false\n--variants-exchanged 50\ncilRep: preprocessing IO function signatures: /home/tedks/tmp/tmp9fe638.c /home/tedks/tmp/tmp6ca25b.c\ncilRep: done preprocessing IO function signatures\ncilrep: from_source: pre: stmt_count = 1\ncilRep: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.c: parsing\ncilRep: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.c: parsed (0.0249434 MB)\ncilRep: computing liveness\ncilRep: computed liveness\ncilrep: from_source: post: stmt_count: 12\ncachingRepresentation: sanity checking begins\n\tp1: true (1)\n\tp2: true (1)\n\tp3: true (1)\n\tp4: true (1)\n\tn1: false (0)\n\tn2: false (0)\n\tn3: false (0)\n\tn4: false (0)\ncachingRepresentation: sanity checking passed (time_taken = 0.492935)\nfaultLocRep: compute_localization: fault_scheme: path, fix_scheme: default\nRep: coverage_sourcename: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_0_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest_19774720444613872346338335552/./coverage.c\ncilRep: instrumenting for fault localization\ncilRep: done instrumenting for fault localization\ncoverage negative:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\ncoverage positive:\n\ttest: 1\n\ttest: 2\n\ttest: 3\n\ttest: 4\ncilRep: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.cache: saved\ncachingRep: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.cache: saved\nfaultlocRep: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.cache: saved\ncilrep done serialize\ncilRep: stmt_count = 12\ncilRep: stmts in weighted_path = 10\ncilRep: total weight = 2.8\ncilRep: stmts in weighted_path with weight >= 1.0 = 2\ncilRep: /home/tedks/tmp/cb243bebea400595cc274d1246f3307c507ba6a0e891f6e318cde2b80a72de40dab19eb7f76d3b6573a08e446bce6fb4435cdb016ae6489973b855a9bddd3b11_95c91d5ebe72138b00a0b9936d9c4bf5a8f48a36_smallest-merged.c (code bank/base file; atoms [1,12])\ncilRep: 1 file(s) total in representation\nsearch: ww_adaptive_1 begins (time = 1430855538.039918)\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include\ncilRep: coverage ignores: /usr/local/include\ncilRep: coverage ignores: /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed\ncilRep: coverage ignores: /usr/include\ncilRep: atoms in standard headers: 0\ncilRep: fix-space quotient by string: 11 -> 11\nprogeq: computing alias analysis information\nsearch: fix space reduced (time_taken = 0.064322)\nexcluded 0 deletes (from list of 0 total edits)\nsearch: ww_adaptive: 10 deletes\nexcluded 0 appends (from list of 0 total edits)\nsearch: ww_adaptive: 64 appends\nsearch: ww_adaptive: 74 possible edits\nsearch: ready to start (time_taken = 0.0861001)\nsearch: ww_adaptive: finding best\n\tfrom new super-mutant\nsearch: ww_adaptive: finding 50 best for super-mutant\nrep: WARNING: test_visiting_atoms: no data available\n\ttry using --coverage-per-test and/or --regen-paths\n\tdefaulting to \'all tests\'\nsearch: ww_adaptive: found 50 best (time_taken = 0.00482488)\nsearch: ww_adaptive: found best (time_taken = 0.000859022)\n\tvariant     1/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 33)\n\t\tn1 false (test_time = 0.211655)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000409842)\n\tvariant     2/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 50)\n\t\tn1 false (test_time = 0.0652571)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000430107)\n\tvariant     3/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 49)\n\t\tn1 false (test_time = 0.0598102)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000479221)\n\tvariant     4/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 48)\n\t\tn1 false (test_time = 0.0696929)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000324965)\n\tvariant     5/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 47)\n\t\tn1 false (test_time = 0.0687239)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000337839)\n\tvariant     6/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 46)\n\t\tn1 false (test_time = 0.0681419)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000386953)\n\tvariant     7/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 45)\n\t\tn1 false (test_time = 0.0630701)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000437975)\n\tvariant     8/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 44)\n\t\tn1 false (test_time = 0.073421)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000347853)\n\tvariant     9/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 43)\n\t\tn1 false (test_time = 0.071229)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000302076)\n\tvariant    10/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 42)\n\t\tn1 false (test_time = 0.063113)\nsearch: ww_adaptive: finding best\n\tfrom existing super-mutants\nsearch: ww_adaptive: found best (time_taken = 0.000258923)\n\tvariant    11/   74 = ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4))  (8 tests, cond 41)\n\t\tn1 true (test_time = 0.0673869)\n\t\tn2 true (test_time = 0.069082)\n\t\tn3 true (test_time = 0.0656641)\n\t\tn4 true (test_time = 0.068048)\n\t\tp1 true (test_time = 0.060149)\n\t\tp2 true (test_time = 0.05971)\n\t\tp3 true (test_time = 0.065892)\n\t\tp4 true (test_time = 0.062222)\nsearch: ww_adaptive: ends (yes repair)\n\nRepair Found: a(5,6)\nRepair Name: ?(1,d(1)) ?(2,d(4)) ?(3,d(7)) ?(4,d(8)) ?(5,d(9)) ?(6,d(10)) ?(7,d(11)) ?(8,d(12)) ?(9,a(11,12)) ?(10,a(11,11)) ?(11,a(11,10)) ?(12,a(11,9)) ?(13,a(11,8)) ?(14,a(11,7)) ?(15,a(11,6)) ?(16,a(11,5)) ?(17,a(11,4)) ?(18,a(11,3)) ?(19,a(11,1)) ?(20,a(10,11)) ?(21,a(10,10)) ?(22,a(10,9)) ?(23,a(10,8)) ?(24,a(10,7)) ?(25,a(10,6)) ?(26,a(10,5)) ?(27,a(10,3)) ?(28,a(10,1)) ?(29,a(9,11)) ?(30,a(9,10)) ?(31,a(9,9)) ?(32,a(9,6)) ?(33,d(3)) ?(34,d(5)) ?(35,a(5,12)) ?(36,a(5,11)) ?(37,a(5,10)) ?(38,a(5,9)) ?(39,a(5,8)) ?(40,a(5,7)) ?(41,a(5,6)) ?(42,a(5,4)) ?(43,a(3,12)) ?(44,a(3,11)) ?(45,a(3,10)) ?(46,a(3,9)) ?(47,a(3,8)) ?(48,a(3,7)) ?(49,a(3,6)) ?(50,a(3,4)) \nTest Condition: 41\nTest Cases Skipped: ""\nCurrent Time: 1430855539.541339\nRep: saving test cache\n\nVariant Test Case Queries: 18\n"Test Suite Evaluations": 2.25\n\nCompile Failures: 0\nWall-Clock Seconds Elapsed: 2.66056\n  Activity Name                     Count Seconds = Percent of Total Time\n  progeq partition                     11   0.001 = 0.0506593%\n  find_best_edit                       11   0.005 = 0.191125%\n  find_k_best_edits                     1   0.005 = 0.203039%\n  sanity_check                          1   0.005 = 0.224064%\n  append_sources                       10   0.086 = 3.61394%\n  compile                               3   0.277 = 11.6702%\n  test                                 34   1.995 = 84.047%\n  TOTAL                                     2.373 = 88.9172% (avg CPU usage)\n'